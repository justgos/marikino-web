{"version":3,"file":"static/webpack/static/development/pages/index.js.3c37fe4505370a55c9bd.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { useMemo, useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport classNames from 'classnames';\nimport ReactAccelerometer from '../components/react-accelerometer';\n\nimport './index.scss';\nimport Header from '../components/Header';\n\nconst IndexPage = () => {\n  const [ eyeState, setEyeState ] = useState({\n    left: false,\n    right: false,\n  });\n  const updateAccel = (dx? : number, dy? : number, dz? : number) => {\n    if(!dx || !dy)\n      return;\n    \n    const newEyeState = { ...eyeState };\n    if(dx > 0.2 && (!eyeState.left || eyeState.right)) {\n      newEyeState.left = true;\n      newEyeState.right = false;\n    }\n    if(dx < -0.2 && (eyeState.left || !eyeState.right)) {\n      newEyeState.left = false;\n      newEyeState.right = true;\n    }\n\n    if(dy < -0.2 && (!eyeState.left || !eyeState.right)) {\n      newEyeState.left = true;\n      newEyeState.right = true;\n    }\n    if(dy > 0.2 && (eyeState.left || eyeState.right)) {\n      newEyeState.left = false;\n      newEyeState.right = false;\n    }\n\n    if(newEyeState.left !== eyeState.left || newEyeState.right !== eyeState.right)\n      setEyeState(newEyeState);\n  }\n\n  const accelState = useMemo(() => ({\n    landscape : false,\n    x: 0,\n    y: 0,\n    z: 0,\n    dx: 0,\n    dy: 0,\n    dz: 0,\n  }), []);\n  const handleOrientation = (event : any) => {\n    const { orientation } = window\n    accelState.landscape = orientation === 90 || orientation === -90;\n  }\n  const handleAcceleration = (event : DeviceMotionEvent) => {\n    const { landscape } = accelState\n    const { useGravity, multiplier } = { useGravity: false, multiplier: 1.0 };\n    const acceleration = useGravity ? event.accelerationIncludingGravity : event.acceleration\n    const rotation = event.rotationRate || null\n    const { x, y, z } = acceleration || { x: 0, y: 0, z: 0 };\n    if(x == null || y == null || z == null)\n      return;\n\n    accelState.x = (landscape ? y : x) * multiplier;\n    accelState.y = (landscape ? x : y) * multiplier;\n    accelState.z = z * multiplier;\n    accelState.dx = (landscape ? y : x) * multiplier - accelState.x;\n    accelState.dy = (landscape ? x : y) * multiplier - accelState.y;\n    accelState.dz = z * multiplier - accelState.x;\n    updateAccel(accelState.dx, accelState.dy, accelState.dz);\n  }\n\n  useEffect(() => {\n    window.addEventListener('devicemotion', handleAcceleration)\n    window.addEventListener('orientationchange', handleOrientation)\n\n    return () => {\n      window.removeEventListener('devicemotion', handleAcceleration);\n      window.removeEventListener('orientationchange', handleOrientation);\n    };\n  }, []);\n  \n  return (\n    <>\n      <Header />\n      <div className=\"index-container\">\n        <div className=\"eye-container\">\n          <Link href=\"/raster\"><a>\n            <div className=\"logo\" />\n          </a></Link>\n          \n          {/* <ReactAccelerometer>\n            {(accel, delta, rotation) => { updateAccel(delta?.dx, delta?.dy); return <></>; }}\n          </ReactAccelerometer> */}\n\n          <Link href=\"/raster\"><a>\n            <div\n              className={classNames(\"eye-raster\", { active: eyeState.left })}\n            />\n          </a></Link>\n          <Link href=\"/vector\"><a>\n            <div\n              className={classNames(\"eye-vector\", { active: eyeState.right })}\n            />\n          </a></Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;;;AAEA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AAGA;AACA;AACA;AALA;AAKA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}